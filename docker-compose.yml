##
## -------------------------
## |   M E D I A B O X     |
## -------------------------
##
##
## Configuration variables for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

services:

  # ----------------------------------------
  # DELUGEVPN
  # ----------------------------------------
  arch-delugevpn:
    image: binhex/arch-delugevpn:latest
    container_name: delugevpn
    restart: unless-stopped
    privileged: true
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8112:8112'
        - '${IP_ADDRESS}:8118:8118'
        - '${IP_ADDRESS}:9118:9118'
        - '${IP_ADDRESS}:58846:58846'
        - '${IP_ADDRESS}:58946:58946'
        - '${IP_ADDRESS}:58946:58946/udp'
    sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
    environment:
        - VPN_ENABLED=yes
        - VPN_USER=${PIAUNAME}
        - VPN_PASS=${PIAPASS}
        - VPN_PROV=pia
        - VPN_CLIENT=wireguard
        - ENABLE_STARTUP_SCRIPTS=no
        - ENABLE_PRIVOXY=yes
        - STRICT_PORT_FORWARD=yes
        - USERSPACE_WIREGUARD=no
        - ENABLE_SOCKS=yes
        - SOCKS_USER=admin
        - SOCKS_PASS=socks
        - LAN_NETWORK=${CIDR_ADDRESS}
        - NAME_SERVERS=84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1
        - DELUGE_DAEMON_LOG_LEVEL=info
        - DELUGE_WEB_LOG_LEVEL=info
        - DELUGE_ENABLE_WEBUI_PASSWORD=yes
        - VPN_INPUT_PORTS=1234
        - VPN_OUTPUT_PORTS=5678
        - DEBUG=false
        - PUID=${PUID}
        - TZ=${TZ}
        - PGID=${PGID}
    volumes:
        - '${DLDIR}:/data'
        - './delugevpn/config:/config'

  # ----------------------------------------
  # HOMER
  # ----------------------------------------
  homer:
    image: b4bz/homer:latest
    container_name: homer
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:80:8080'
    user: ${PUID}:${PGID}
    volumes:
        - './homer:/www/assets'

  # ----------------------------------------
  # LIDARR
  # ----------------------------------------
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8686:8686'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
        - './lidarr:/config'
        - '${DLDIR}/completed:/data/completed'
        - '${DLDIR}/incomplete:/data/incomplete'
        - '${MUSICDIR}:/music'
        - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # Maintainerr
  # ----------------------------------------
  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:latest 
    container_name: maintainerr
    user: ${PUID}:${PGID}
    volumes:
         - './maintainerr:/opt/data'
    network_mode: 'bridge' 
    environment:
         - TZ=America/Central
   #   - DEBUG=true # uncomment (remove the hashtag) to enable debug logs
    ports:
         - '${IP_ADDRESS}:6246:6246' 
    restart: unless-stopped

  # ----------------------------------------
  # NZBGet
  # ----------------------------------------
  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    network_mode: 'bridge'
    ports:
      - '${IP_ADDRESS}:6789:6789'
    volumes:
      - './nzbget:/config'
      - '${DLDIR}:/downloads'

  # ----------------------------------------
  # OMBI
  # ----------------------------------------
  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${PLEX_IP_ADDRESS}:3579:3579'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
    volumes:
        - './ombi:/config'
        - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # PLEX
  # ----------------------------------------
  plex:
    container_name: plex:latest
    image: plexinc/pms-docker:${PMSTAG}
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${PLEX_IP_ADDRESS}:32400:32400/tcp'
        - '${PLEX_IP_ADDRESS}:3005:3005/tcp'
        - '${PLEX_IP_ADDRESS}:8324:8324/tcp'
        - '${PLEX_IP_ADDRESS}:32469:32469/tcp'
        - '${PLEX_IP_ADDRESS}:1900:1900/udp'
        - '${PLEX_IP_ADDRESS}:32410:32410/udp'
        - '${PLEX_IP_ADDRESS}:32412:32412/udp'
        - '${PLEX_IP_ADDRESS}:32413:32413/udp'
        - '${PLEX_IP_ADDRESS}:32414:32414/udp'
    environment:
        - ADVERTISE_IP=http://${PLEX_IP_ADDRESS}:32400/
        - ALLOWED_NETWORKS=${CIDR_ADDRESS}
        - PLEX_UID=${PUID}
        - PLEX_GID=${PGID}
        - TZ=${TZ}
    hostname: ${HOSTNAME}
    volumes:
        - './plex:/config'
        - './plex/transcode:/transcode'
        - '${MISCDIR}:/data/misc'
        - '${MOVIEDIR}:/data/movies'
        - '${MUSICDIR}:/data/music'
        - '${TVDIR}:/data/tvshows'

  # ----------------------------------------
  # PORTAINER
  # ----------------------------------------
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8000:8000'
        - '${IP_ADDRESS}:9443:9443'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
        - './portainer:/data'
        - '/var/run/docker.sock:/var/run/docker.sock'
    command: -H unix:///var/run/docker.sock

  # ----------------------------------------
  # PROWLARR
  # ----------------------------------------
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
      - '${IP_ADDRESS}:9696:9696'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - './prowlarr:/config'

  # ----------------------------------------
  # RADARR
  # ----------------------------------------
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:7878:7878'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
        - './radarr:/config'
        - '${DLDIR}/completed:/data/completed'
        - '${DLDIR}/incomplete:/data/incomplete'
        - '${MOVIEDIR}:/movies'

  # ----------------------------------------
  # SONARR
  # ----------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8989:8989'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
        - './sonarr:/config'
        - '${DLDIR}/completed:/data/completed'
        - '${DLDIR}/incomplete:/data/incomplete'
        - '${TVDIR}:/tv'

  # ----------------------------------------
  # TAUTULLI
  # ----------------------------------------
  tautulli:
    image: tautulli/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8181:8181'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
        - './tautulli:/config'
        - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
    depends_on:
        - plex

  # ----------------------------------------
  # WATCHTOWER
  # ----------------------------------------
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    network_mode: "bridge"
    hostname: '${HOSTNAME}'
    environment:
        - WATCHTOWER_CLEANUP=true
        - WATCHTOWER_SCHEDULE=0 0 */4 * * *
        - WATCHTOWER_INCLUDE_STOPPED=true
        - TZ=${TZ}
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
